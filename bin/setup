#!/usr/bin/env ruby
require 'pathname'

APPS_ROOT = Pathname.new File.expand_path('../../', __FILE__)
APP_ROOT = Pathname.new File.expand_path('hitobito/', APPS_ROOT)
WAGONS = { 
  hitobito_youth: 'https://github.com/hitobito/hitobito_youth.git',
  hitobito_pbs: 'https://github.com/hitobito/hitobito_pbs.git'
}.freeze

def clone_or_pull(app, repo_url)
  system "git -C #{app} pull || git clone #{repo_url} #{app}"
end

Dir.chdir APPS_ROOT do
  puts "In #{APPS_ROOT}"
  puts '== Installing Wagons=='
  clone_or_pull(:hitobito, 'https://github.com/hitobito/hitobito.git')
end

Dir.chdir APP_ROOT do
  puts "In #{APP_ROOT}"
  puts '== Installing dependencies =='
  system 'gem install bundler --conservative'

  old_gemfile = File.open('Gemfile').read
  File.open('Gemfile', 'w') do |gemfile|
    until old_gemfile.include?("gem 'mysql2', '~> 0.4.9'") || old_gemfile.include?("gem 'mysql2', '~> 0.4.10'")
      fail "MySql-Version got updated. Adapt `bin/setup` script"
    end
    gemfile << old_gemfile.gsub("gem 'mysql2', '0.4.9'", "gem 'mysql2', '~> 0.4.10'").gsub("gem 'therubyracer'", "#gem 'therubyracer'")
  end

  system 'bundle install --jobs=3 --retry=3'
end

Dir.chdir APPS_ROOT do
  puts "In #{APPS_ROOT}"
  puts '== Installing Wagons=='
  WAGONS.each do |wagon, repo_url|
    clone_or_pull(wagon, repo_url)
    system "cp hitobito/Gemfile.lock #{wagon}/"
  end
  system 'cp hitobito/Wagonfile.ci hitobito/Wagonfile'
end

Dir.chdir APP_ROOT do
  puts "In #{APP_ROOT}"
#  puts "\n== Copying sample files =="
#  system 'cp config/application.example.yml config/application.yml' unless File.exist?('config/application.yml')

  puts "\n== Preparing database =="
  system 'bundle exec rake db:create:all db:setup:all'
  system 'bundle exec rake db:migrate RAILS_ENV=test'

  puts "\n== Removing old logs and tempfiles =="
  system 'rm -f log/*'
  system 'rm -rf tmp/cache'
end
